#!/usr/bin/env python
# coding: utf-8

'''
load REG MEM
store REG MEM
四则/逻辑/比较
jump
'''

base_commands = {
    'load': 'load data from mem to reg',
    'save': 'save data from reg to mem',
    'add':  '任意直接数/寄存器 + 任意直接数/寄存器，结果存入寄存器A',
    'sub':  '任意直接数/寄存器 - 任意直接数/寄存器，结果存入寄存器A',
    'mlt':  '任意直接数/寄存器 * 任意直接数/寄存器，结果存入寄存器A',
    'dvi':  '任意直接数/寄存器 / 任意直接数/寄存器，结果存入寄存器A',
    'and':  '任意直接数/寄存器 & 任意直接数/寄存器，结果存入寄存器A',
    'or':   '任意直接数/寄存器 | 任意直接数/寄存器，结果存入寄存器A',
    'not':  '! 任意直接数/寄存器，结果存入寄存器A',
    'cmp':  '比较，结果存入寄存器C',
    'jmp':  '直接跳转',
    'jpe':  '= 条件跳转',
    'jpl':  '< 条件跳转',
    'jpg':  '> 条件跳转',
}

registers = {
    'RA': 'A 寄存器',
    'RB': 'B 寄存器',
    'RC': 'C 寄存器',
    'RD': 'D 寄存器',
    'SP': '栈指针',
    'IP': '指令指针',
    'ZF': '0位标志',
    'SF': '符号标志',
    'OF': '溢出标志',
}

base_commands_mc = {
    'load': 0b00000000,
    'save': 0b00000001,
    'add':  0b00000010,
    'sub':  0b00000011,
    'mlt':  0b00000100,
    'dvi':  0b00000101,
    'and':  0b00000110,
    'or':   0b00000111,
    'not':  0b00001000,
    'cmp':  0b00001001,
    'jmp':  0b00001010,
    'jpe':  0b00001011,
    'jpl':  0b00001100,
    'jpg':  0b00001101,
}

registers_mc = {
    'RA': 0b10100000,
    'RB': 0b10110000,
    'RC': 0b11000000,
    'RD': 0b11010000,
    'SP': 0b11100000,
    'IP': 0b11110000,
    'ZF': 0b00000001,
    'SF': 0b00000010,
    'OF': 0b00000011,
}
